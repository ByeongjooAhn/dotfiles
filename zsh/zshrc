# .zshrc
# ======
# vim: set sts=2 sw=2 ts=2

# To profile zsh startup, use the following:
# In ~/.zshrc,
#  (BEGIN) zmodload zsh/zprof
#  (END)   zprof >! ~/.zsh.startup.log
# % repeat 3 {time zsh -i -c exit}


# Default prompt host color for pure theme and tmux statusbar.
# You may want to have different color per machine (use ANSI color name or xterm color codes [0-255]).
#   - https://upload.wikimedia.org/wikipedia/commons/1/15/Xterm_256color_chart.svg
# The PROMPT_HOST_COLOR variable can be inherited from a parent shell, tmux, or SSH session.
if [[ -z "$PROMPT_HOST_COLOR" ]]; then
  export PROMPT_HOST_COLOR="6"  # cyan
fi

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# autoload built-in zsh utilities.
autoload -Uz is-at-least


# Source antidote
if [[ ! -s "${ZDOTDIR:-$HOME}/.zsh/antidote/antidote.zsh" ]]; then
  echo -e "\033[0;31m antidote is not installed; please update dotfiles !"
  echo -e "\033[0;33m  Try one of the following: \
       $ dotfiles update\n\
       $ cd ~/.dotfiles && python install.py\
       $ cd ~/.dotfiles && git submodule update --init --recursive\
"
  echo -e "\033[0m"
  return
fi
source "${ZDOTDIR:-$HOME}/.zsh/antidote/antidote.zsh"


# Source the Prezto configuration file.
if [[ -s "${ZDOTDIR:-$HOME}/.zpreztorc" ]]; then
  source "${ZDOTDIR:-$HOME}/.zpreztorc"
fi

# Do not put all usernames as possible candidates for tab completion.
zstyle ':completion:*' users root $USER


# virtualenvwrapper -- use lazy load (see prezto#669)
if (( $+commands[virtualenvwrapper_lazy.sh] )); then
    source "$commands[virtualenvwrapper_lazy.sh]"
fi

# nvm -- sourcing is very slow, use lazy load
if [[ -f "$HOME/.nvm/nvm.sh" ]]; then
  function nvm() {
    unfunction nvm
    source "$HOME/.nvm/nvm.sh"
    nvm "$@"
  }
fi

# Additional zplug from ~/.zshrc.local
if [[ -s "${ZDOTDIR:-$HOME}/.zshrc.local" ]]; then
  source "${ZDOTDIR:-$HOME}/.zshrc.local"
fi

# Misc plugin configs {{{
# -----------------------

# fzf-marks
export FZF_MARKS_JUMP='^g'

# }}}

# ------------------------------------------------------ }}}

# zsh plugin specifications.
# antidote-managed plugins will be stored at $ANTIDOTE_HOME
export ANTIDOTE_HOME="$HOME/.zsh/antidote-plugins"
zstyle ':antidote:bundle' use-friendly-names on

if [ ! -d "$ANTIDOTE_HOME" ]; then
    echo -e "\033[0;33mInitializing ANTIDOTE and zsh plugins for the first time, please be patient ...\033[0m"
fi

source <(antidote init)

# TODO: Use static loading (cache) for better performance
# (see antidote#63, antidote#65 for more details)
# Don't forget to update the `reload!` alias and `install.py` tasks
if true; then

  # TODO: Get rid of prezto, a legacy.
  antidote bundle sorin-ionescu/prezto

  if is-at-least 5.4; then
    # zsh theme: powerlevel10k + customization
    # p10k's minimum zsh requirement is 5.1 but we require zsh 5.4+,
    # because without the instant mode initialization is slower than pure.
    antidote bundle romkatv/powerlevel10k
  else
    # zsh theme: pure (forked ver). For OLD zsh.
    antidote bundle mafredri/zsh-async
    antidote bundle wookayin/pure
  fi

  # zsh syntax: FSH
  # theme file (XDG:wook) is at ~/.config/fsh/wook.ini
  # For some reason, @zdharma's repo is gone -- workaround by using its fork
  antidote bundle wookayin/fast-syntax-highlighting
  fast-theme "XDG:wook" > /dev/null  # TODO: do it once

  antidote bundle wookayin/fzf-fasd
  # More completion support
  antidote bundle esc/conda-zsh-completion

  # see ~/.zsh/zsh.d/envs.zsh for fzf configs
  antidote bundle wookayin/fzf-fasd
  antidote bundle junegunn/fzf-git.sh kind:clone

  antidote bundle zsh-users/zsh-autosuggestions
  if (( $+commands[virtualenvwrapper_lazy.sh] || $+commands[conda] )); then
    # Use my own fork for a while, to support autoswitch into anaconda envs
    antidote bundle wookayin/zsh-autoswitch-virtualenv
  fi
  if [[ "`uname`" == "Darwin" ]]; then
    antidote bundle wookayin/anybar-zsh
  fi

fi

# }}} ===================

# fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Manually source fzf-git.sh,
# because sourcing it via plugin manager will make shell terminate
source $(__antidote_bundledir junegunn/fzf-git.sh)


# Source zsh script files after loading the zsh plugins.
for config_file (${ZDOTDIR:-$HOME}/.zsh/zsh.d/*.zsh(N)) source $config_file

# Terminal
# Use xterm-256color (for tmux, too)
if [[ $TERM != "xterm-kitty" ]]; then
  export TERM="xterm-256color"
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.zsh/p10k.zsh ]] || source ~/.zsh/p10k.zsh


# iTerm integration (for OS X iTerm2)
# @see https://iterm2.com/shell_integration.html
if [[ "`uname`" == "Darwin" ]] && [[ -f ${HOME}/.iterm2_shell_integration.zsh ]]; then
    source ${HOME}/.iterm2_shell_integration.zsh
fi

if (( $+commands[iterm-tab-color] )); then
    # set tab color, if it is a new connection to remote through SSH
    function iterm_tab_color_auto() {
        if [ -z "$TMUX" ] && [ -n "$SSH_CONNECTION" ] && [ -n "$PROMPT_HOST_COLOR" ]; then
            iterm-tab-color $PROMPT_HOST_COLOR
        fi
    }
    iterm_tab_color_auto
fi

# Anaconda3
# see ~/.zshenv for $CONDA_EXE detection
function _conda_initialize() {
# >>> conda initialize >>>
if [ -n "${CONDA_EXE}" ]; then
  ${CONDA_EXE} config --set auto_activate_base false
  __conda_setup="$(${CONDA_EXE} 'shell.zsh' 'hook' 2> /dev/null)"
  if [ $? -eq 0 ]; then
      eval "$__conda_setup"
  fi
  unset __conda_setup
fi
# <<< conda initialize <<<
}
# Note: conda initialize is slow (0.3 sec), so execute lazily
conda() {
  unfunction conda
  _conda_initialize
  conda "$@"
}

if [[ -z "$CONDA_EXE" && -d "/opt/homebrew/Caskroom/miniconda" ]]; then
  echo "Warning: Please install miniconda locally on your HOME, not via Homebrew."
  echo "$ wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh"
  echo "$ ./Miniconda3-latest-MacOSX-x86_64.sh -p $HOME/.miniconda3"
fi
