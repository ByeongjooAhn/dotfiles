# An UltiSnip that can be used everywhere.

global !p
def t_get(index, default=''):
    # Get the value of the placeholder `t`, but avoids IndexError.
    try:
        return t[index]
    except IndexError:
        return default
endglobal

# ┏━━━━━━━┓
# ┃ Boxes ┃
# ┗━━━━━━━┛

snippet box "Box (uses thiner unicode ──)"
`!p snip.rv = '┌' + '─' * (len(t_get(1)) + 2) + '┐'`
│ $1 │
`!p snip.rv = '└' + '─' * (len(t_get(1)) + 2) + '┘'`
$0
endsnippet

snippet Box "Box (uses thicker unicode ━━)"
`!p snip.rv = '┏' + '━' * (len(t_get(1)) + 2) + '┓'`
┃ $1 ┃
`!p snip.rv = '┗' + '━' * (len(t_get(1)) + 2) + '┛'`
$0
endsnippet

snippet %box "Box (with %)"
`!p snip.rv = '%' + '%' * (len(t_get(1)) + 2) + '%'`
% $1 %
`!p snip.rv = '%' + '%' * (len(t_get(1)) + 2) + '%'`
$0
endsnippet

snippet %Box "Box (uses thicker unicode ━━, and with %comments)"
`!p snip.rv = '% ┏' + '━' * (len(t_get(1)) + 2) + '┓'`
% ┃ $1 ┃
`!p snip.rv = '% ┗' + '━' * (len(t_get(1)) + 2) + '┛'`
$0
endsnippet

snippet #box "Box (with #)"
`!p snip.rv = '#' + '#' * (len(t_get(1)) + 2) + '#'`
# $1 #
`!p snip.rv = '#' + '#' * (len(t_get(1)) + 2) + '#'`
$0
endsnippet

snippet #Box "Box (uses thicker unicode ━━, and with #comments)"
`!p snip.rv = '# ┏' + '━' * (len(t_get(1)) + 2) + '┓'`
# ┃ $1 ┃
`!p snip.rv = '# ┗' + '━' * (len(t_get(1)) + 2) + '┛'`
$0
endsnippet


# ┏━━━━━━━━━━━━━━━━┓
# ┃ Splitter Lines ┃
# ┗━━━━━━━━━━━━━━━━┛

snippet %% "Horizontal rule filled with %%%"
`!p snip.rv = '%' * 100`
endsnippet

snippet ## "Horizontal rule filled with ###"
`!p snip.rv = '#' * 100`
endsnippet

snippet %- "Horizontal rule filled with %--"
`!p snip.rv = '%' + '-' * 99`
endsnippet
snippet #- "Horizontal rule filled with #--"
`!p snip.rv = '#' + '-' * 99`
endsnippet

snippet %= "Horizontal rule filled with %=="
`!p snip.rv = '%' + '=' * 99`
endsnippet
snippet #= "Horizontal rule filled with #=="
`!p snip.rv = '#' + '=' * 99`
endsnippet

snippet %-- "Horizontal rule filled with %── (unicode)"
`!p snip.rv = '%' + '─' * 99`
endsnippet
snippet #-- "Horizontal rule filled with #── (unicode)"
`!p snip.rv = '#' + '─' * 99`
endsnippet

snippet %== "Horizontal rule filled with %━━ (unicode)"
`!p snip.rv = '%' + '━' * 99`
endsnippet
snippet #== "Horizontal rule filled with %━━ (unicode)"
`!p snip.rv = '#' + '━' * 99`
endsnippet
